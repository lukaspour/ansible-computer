---
- name: update all packages to latest version
  apt: 
    upgrade=dist
    update_cache=yes
    cache_valid_time=3600 
    autoremove=yes

- name: Remove useless apps
  apt:
    pkg="{{item}}"
    state=absent
    purge=yes
    autoremove=yes
  become: true
  with_items:
    - ibus-table

- name: Install important utilities
  apt:
    pkg="{{item}}"
    state=latest 
    cache_valid_time=3600 
    update_cache=true
    force=no
  become: true
  with_items:
    - python3-pip
#    - linuxbrew-wrapper
    - curl
    - htop
    - iftop
    - iotop
    - iptraf
    - mc
    - mtr
    # ncdu: ukazatel obsazeneho mista na disku
    - ncdu
    # nethogs: monitors network activity of each process
    - nethogs
    - nmap
    - screen
    - tmux
    - poedit
    - krita
    - kolourpaint
    - filezilla
    - ubuntu-restricted-extras
    - whois
    - curl
    - guake
    - inkscape
    - numlockx
    - vlc
    - libreoffice
    - libreoffice-l10n-cs
    - rdesktop
    - dconf-editor
    - s-tui
    - meld
    - gnome-tweaks
    - usb-creator-gtk

- name: Install brew packages
  command: brew install terragrunt pre-commit vaulted tfenv
  become: yes
  become_user: "{{username}}"

- name: Install Terraform
  command: tfenv install latest
  become: true
  become_user: "{{username}}"

- name: Create autostart folder
  file:
    path: ~/.config/autostart
    state: directory
    owner: "{{username}}"
    group: "{{username}}"
    mode: 0755
  become: yes
  become_user: "{{username}}"

- name: Create projects folder
  file:
    path: ~/projects
    state: directory
    owner: "{{username}}"
    group: "{{username}}"
    mode: 0750
  become: yes
  become_user: "{{username}}"

- name: Setup autostart Guake
  copy:
    src: "{{ role_path }}/files/guake.desktop"
    dest: "~/.config/autostart/guake.desktop"
    owner: "{{username}}"
    group: "{{username}}"
    mode: 0644
  become: yes
  become_user: "{{username}}"

- name: "Install PIP packages."
  pip:
    umask: "0022"
    name: 
      - awscli
      - saws
      - mycli
      - wheel

- name: "Mount options for /"
  mount:
    path: "/"
    src: "UUID={{ ansible_mounts | json_query('[?mount == `/`] | [0].uuid') }}"
    fstype: "ext4"
    opts: "errors=remount-ro,barrier=0"
    state: "present"

- name: Add SSD scheduler config
  copy:
    src: "{{ role_path }}/files/60-ssd-scheduler.rules"
    dest: "/etc/udev/rules.d/60-ssd-scheduler.rules"
    owner: root
    group: root
    mode: 0644

- name: Add custom sysctl config
  copy:
    src: "{{ role_path }}/files/60-sysctl-ansible.conf"
    dest: "/etc/sysctl.d/60-sysctl-ansible.conf"
    owner: root
    group: root
    mode: 0644

- name: replace default grub GRUB_CMDLINE_LINUX_DEFAULT
  lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX_DEFAULT='
    line: 'GRUB_CMDLINE_LINUX_DEFAULT=""'

- name: Update grub
  command: update-grub2

- name: Enable the key combination Ctrl+Alt+Backspace
  lineinfile:
    path: /etc/default/keyboard
    regexp: '^XKBOPTIONS='
    line: 'XKBOPTIONS="terminate:ctrl_alt_bksp"'

- name: Enable UFW firewall
  command: ufw enable

- name: setup /tmp as ramdisk
  mount:
    path: /tmp
    src: tmpfs
    fstype: tmpfs
    opts: rw,nodev,nosuid,size=2048M
    state: mounted

- name: setup Downloads as ramdisk
  mount:
    path: /home/{{username}}/Downloads
    src: tmpfs
    fstype: tmpfs
    opts: rw,nodev,nosuid,size=4096M
    state: mounted

- name: setup /var/tmp as ramdisk
  mount:
    path: /var/tmp
    src: tmpfs
    fstype: tmpfs
    opts: rw,nodev,nosuid,size=2048M
    state: mounted

- name: setup blocked websites
  blockinfile:
    path: /etc/hosts
    block: |
      127.0.0.1 idnes.cz www.idnes.cz
      127.0.0.1 ihned.cz www.ihned.cz
      127.0.0.1 lidovky.cz www.lidovky.cz
      127.0.0.1 novinky.cz www.novinky.cz
      127.0.0.1 tn.cz www.tn.cz
      127.0.0.1 super.cz www.super.cz
      127.0.0.1 seznam.cz www.seznam.cz
      127.0.0.1 amateri.cz www.amateri.cz
